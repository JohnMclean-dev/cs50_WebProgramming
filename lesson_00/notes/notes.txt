https://cdn.cs50.net/web/2020/spring/lectures/0/lecture0.pdf

13
    HTML - Hyper Text Markup Language

14
    first line represents HTML declaration (what version)
    All html files must have a...
        head element (information about the web page, user does not see) and a...
        body element (visible part of the page user can see).

22
    Document Object Module (DOM), diagram explaining the structure of html elements

23
    <ol>__Ordered list
    <ul>__Unordered list
        <li>__list item

    <img src="">__image element which requires a source of said image, use alt to represent image if error occurs. Has no closing tag as there is no content that would be stored within the image. Self closing tag.

    <a>__anchor which requires href (hyperlink reference)

24
    CSS - Cascading style sheet

    best practices
        do not rely on in line styling, use the style element in the header element
        i.e.
        <style>
            h1 {
                color: blue;
                text-align: center;
            }
        </style>

        note style can also be in it's own css file also referenced in the header
        <link rel="stylesheet" href="styles.css">

        rule of thumb, if you are writing the same lines of code multiple times there is a better way

        padding - space content within the element
        margin - space element from other elements

        font-weight - bold, italics, etc.

        <style>
            h1 {} <!-- styles element -->
            #foo {} <!-- styles id -->
            .baz {} <!-- styles class -->
        </style>

31
    use selectors to specify styling of elements based on a user defined hierarchy 

    a:b for use with conditional scenarios, i.e. button:hover for hovering over a button

33
    viewport - area of the screen that the user can see (i.e. desktop vs smartphone)

    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    add above to header which scales the application based on viewport

37
    media queries - programmer controls the styling based on the viewport

    <style>
        @media (min_width: 600px) {
            body {
                background-color: red;
            }
        }
        @media (max_width: 599px) {
            body {
                background-color: blue;
            }
        }
    </style>

38
    Flexbox - scaling elements based on viewport
    Grid is also a tool for this

45
    Bootstrap - popular CSS library

    apply boostrap css through the use of classes

46
    Sass - essentially an extension of css but is a different language (scss extension), one key feature is the ability to have variables

    $color: red; /* "$" is used to create a variable */

    *note to link scss files which they must be compiled through sass command prompt. Browers are unable to read sass files atm

    recompiling can be automated with...
        sass --watch style.scss:style.css

    can also nest css selectors inside of other css selctors (similar to what we saw in slide 31)
    
    div {
        style-here: hi;
        p {
            style-here: hi;
        }
        ul {
            style-here: hi;
        }
    }

    finally sass also adds inheritance, best used when elements are mostly the same with one or two differences

    %message {
        ...
    }

    .success {
        @extend %message;
        background-colour: green;
    }

    .warning {
        @extend %message;
        background-colour: orange;
    }

    .error {
        @extend %message;
        background-colour: red;
    }